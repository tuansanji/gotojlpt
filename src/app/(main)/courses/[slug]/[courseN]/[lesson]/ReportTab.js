import React, { useState, useMemo } from "react";

// üåü PAGE ID C·ª¶A B·∫†N
const FACEBOOK_PAGE_ID = "100090524688743";

// Gi·∫£ ƒë·ªãnh h√†m findAssetHierarchy ƒë√£ ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a ·ªü ƒë√¢y
const findAssetHierarchy = (courses, assetCurrent) => {
  // ... (Gi·ªØ nguy√™n h√†m findAssetHierarchy) ...
  const assetId = assetCurrent?.id;
  if (!assetId) return [];

  const hierarchy = [];

  // 1. L·∫∑p qua Stages (C·∫•p 1)
  for (const stage of courses.stages || []) {
    const stageName = stage.title || stage.name;
    for (const section of stage.sections || []) {
      const sectionName = section.title || section.name;
      for (const lesson of section.lessons || []) {
        const lessonName = lesson.title || lesson.name;
        for (const asset of lesson.assets || []) {
          if (asset.id === assetId) {
            const assetName = asset.title || asset.name;
            return [stageName, sectionName, lessonName, assetName].filter(
              Boolean
            );
          }
        }
      }
    }
  }
  return [];
};

export default function ReportTab({ courses, assetCurrent }) {
  // T√çNH TO√ÅN N·ªòI DUNG T·ª∞ ƒê·ªòNG (Ti·ªÅn t·ªë)
  const { reportPrefix, assetId } = useMemo(() => {
    const hierarchyArray = findAssetHierarchy(courses, assetCurrent);
    const assetId = assetCurrent?.id || "N/A";
    const hierarchyPath = hierarchyArray.join(" > ");

    // Chu·ªói ti·ªÅn t·ªë (Ph·∫ßn kh√¥ng ƒë·ªïi, d√πng cho b√°o c√°o l·ªói)
    const prefix = `[B√°o L·ªói T·ª± ƒê·ªông] [ID: ${assetId}] ${hierarchyPath}`;

    return { reportPrefix: prefix, assetId };
  }, [courses, assetCurrent]);

  // üåü STATE CHO √ù KI·∫æN T√ôY CH·ªåN
  const [userComment, setUserComment] = useState("");
  const [isCopied, setIsCopied] = useState(false);

  // üåü H√ÄM X·ª¨ L√ù G·ª¨I B√ÅO C√ÅO (T·ª∞ ƒê·ªòNG SAO CH√âP V√Ä CHUY·ªÇN H∆Ø·ªöNG)
  const handleOneClickReport = () => {
    const messengerUrlBase = `https://m.me/${FACEBOOK_PAGE_ID}`;

    // üåü G·ªòP N·ªòI DUNG: Lu√¥n bao g·ªìm ti·ªÅn t·ªë, th√™m √Ω ki·∫øn ng∆∞·ªùi d√πng n·∫øu c√≥
    const finalReportContent = `${reportPrefix}${
      userComment ? `: ${userComment}` : ""
    }`;

    // Y√™u c·∫ßu x√°c nh·∫≠n nhanh n·∫øu √Ω ki·∫øn tr·ªëng
    if (!userComment.trim()) {
      if (
        !window.confirm(
          "B·∫°n ch∆∞a ƒëi·ªÅn m√¥ t·∫£ l·ªói/g√≥p √Ω chi ti·∫øt. B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën g·ª≠i b√°o c√°o t·ª± ƒë·ªông n√†y kh√¥ng?"
        )
      ) {
        return;
      }
    }

    if (navigator.clipboard && window.isSecureContext) {
      // 1. Sao ch√©p n·ªôi dung cu·ªëi c√πng
      navigator.clipboard
        .writeText(finalReportContent)
        .then(() => {
          // 2. Th√¥ng b√°o v√† chuy·ªÉn h∆∞·ªõng
          alert(
            "‚úÖ B√°o c√°o ƒë√£ ƒë∆∞·ª£c sao ch√©p t·ª± ƒë·ªông! Vui l√≤ng nh·∫•n Ctrl+V/D√°n v√†o cu·ªôc tr√≤ chuy·ªán Messenger ƒë·ªÉ g·ª≠i."
          );
          window.open(messengerUrlBase, "_blank");
          setUserComment(""); // X√≥a n·ªôi dung sau khi g·ª≠i
        })
        .catch((err) => {
          console.error("Kh√¥ng th·ªÉ sao ch√©p t·ª± ƒë·ªông:", err);
          alert("L·ªói sao ch√©p t·ª± ƒë·ªông. Vui l√≤ng sao ch√©p th·ªß c√¥ng.");
        });
    } else {
      // D·ª± ph√≤ng
      alert("Vui l√≤ng sao ch√©p th·ªß c√¥ng v√† d√°n v√†o Messenger.");
      window.open(messengerUrlBase, "_blank");
    }
  };

  return (
    <div className="p-6 mt-4 bg-white rounded-lg shadow-md border border-red-200">
      <h3 className="font-bold text-lg text-red-600">B√°o L·ªói / G√≥p √Ω</h3>

      <p className="mt-2 text-gray-700 font-semibold">
        N·ªôi dung b√°o c√°o chi ti·∫øt v·ªÅ t√†i li·ªáu:
      </p>

      {/* PH·∫¶N N·ªòI DUNG T·ª∞ ƒê·ªòNG (KH√îNG TH·ªÇ S·ª¨A) */}
      <div className="mt-2 p-3 bg-gray-50 border border-gray-300 rounded-md break-words whitespace-pre-wrap text-sm text-gray-800">
        {reportPrefix}
      </div>

      <form className="mt-4">
        <label
          htmlFor="userComment"
          className="block text-sm font-medium text-gray-700 mb-1"
        >
          M√¥ t·∫£ l·ªói/G√≥p √Ω chi ti·∫øt (T√πy ch·ªçn):
        </label>

        {/* üåü TEXTAREA CHO √ù KI·∫æN T√ôY CH·ªåN (KH√îNG B·∫ÆT BU·ªòC) */}
        <textarea
          id="userComment"
          name="userComment"
          rows="4"
          value={userComment}
          onChange={(e) => setUserComment(e.target.value)}
          className="w-full px-3 py-2 text-gray-800 border border-gray-300 rounded-md focus:outline-none focus:ring-red-500 focus:border-red-500 transition duration-150"
          placeholder="V√≠ d·ª•: 'Trang 5 b·ªã m·∫•t h√¨nh ·∫£nh', ho·∫∑c '√Çm thanh b·ªã r√® t·ª´ ph√∫t 0:30'..."
        />

        <p className="mt-3 text-sm text-red-600 font-medium">
          Nh·∫•n n√∫t d∆∞·ªõi ƒë√¢y ƒë·ªÉ **g·ªôp c·∫£ hai ph·∫ßn**, t·ª± ƒë·ªông sao ch√©p v√† chuy·ªÉn
          sang Messenger.
        </p>

        <div className="flex justify-center mt-4">
          {/* N√öT G·ª¨I B√ÅO C√ÅO */}
          <button
            type="button"
            onClick={handleOneClickReport}
            className="flex items-center space-x-2 px-6 py-3 bg-blue-600 text-white font-bold rounded-lg shadow-lg hover:bg-blue-700 transition duration-150 focus:outline-none focus:ring-4 focus:ring-blue-500 focus:ring-offset-2"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              fill="currentColor"
              className="bi bi-send-fill"
              viewBox="0 0 16 16"
            >
              <path d="M15.964.686a.5.5 0 0 0-.65-.65L.727 7.728l-.348 7.228A.5.5 0 0 0 .88 15.54L15.964.686zm-1.892 1.492L2.7 7.973 2.053 14.856l11.81-6.231 1.743-6.526z" />
            </svg>
            <span>G·ª≠i B√°o C√°o qua Messenger</span>
          </button>
        </div>
      </form>
    </div>
  );
}
